# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ['main', 'develop']
  pull_request:
    branches: ['main', 'develop']

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      REACT_APP_APIKEY: process.env.REACT_APP_APIKEY
      REACT_APP_AUTHDOMAIN: process.env.REACT_APP_AUTHDOMAIN
      REACT_APP_PROJECTID: process.env.REACT_APP_PROJECTID
      REACT_APP_STORAGEBUCKET: process.env.REACT_APP_STORAGEBUCKET
      REACT_APP_MESSAGINGSENDERID: process.env.REACT_APP_MESSAGINGSENDERID
      REACT_APP_APPID: process.env.REACT_APP_APPID

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn
      - run: yarn prettier:format
      - run: yarn build
      - run: yarn test

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
